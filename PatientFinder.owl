<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE uridef [
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema">
  <!ENTITY service "http://www.daml.org/services/owl-s/1.2/Service.owl">
  <!ENTITY profile "http://www.daml.org/services/owl-s/1.2/Profile.owl">
  <!ENTITY process "http://www.daml.org/services/owl-s/1.2/Process.owl">
  <!ENTITY grounding "N:/InterfaceEngine/semantic/Grounding_modified.owl">
  <!ENTITY groundingWSDL "http://cheeso.members.winisp.net/books/books.asmx?WSDL">
  <!ENTITY mind "http://on.cs.unibas.ch/owl-s/1.2/MindswapProfileHierarchy.owl">
  <!ENTITY bibtex "http://purl.org/net/nknouf/ns/bibtex">
  <!ENTITY THIS "N:/InterfaceEngine/semantic/SemanticDicom/PatientFinder.owl">
]>
<rdf:RDF
  xmlns:rdf="&rdf;#"
  xmlns:rdfs="&rdfs;#"
  xmlns:owl="&owl;#"
  xmlns:xsd="&xsd;#"
  xmlns:service="&service;#"
  xmlns:profile="&profile;#"
  xmlns:process="&process;#"
  xmlns:grounding="&grounding;#"
  xmlns:bibtex="&bibtex;#"
  xmlns:mind="&mind;#"
  xmlns="&THIS;#"
  xml:base="&THIS;">

<owl:Ontology rdf:about="">
	<owl:imports rdf:resource="&service;"/>
	<owl:imports rdf:resource="&profile;"/>
	<owl:imports rdf:resource="&process;"/>
	<owl:imports rdf:resource="&grounding;"/>
   <!-- use the cached version for bibtex ontology -->
   <owl:imports rdf:resource="http://on.cs.unibas.ch/owl/2003/12/bibtex.owl"/>
   <owl:versionInfo>$Id: PatientFinder.owl 2578 2011-02-04 16:58:17Z thorsten $</owl:versionInfo>
</owl:Ontology>

<!-- Service description -->
<service:Service rdf:ID="PatientFinderService">
	<service:presents rdf:resource="#PatientFinderProfile"/>

	<service:describedBy rdf:resource="#PatientFinderProcess"/>

	<service:supports rdf:resource="#PatientFinderGrounding"/>
</service:Service>

<!-- Profile description -->
<profile:Profile rdf:ID="PatientFinderProfile">
	<service:presentedBy rdf:resource="#PatientFinderService"/>

	<profile:serviceName xml:lang="en">Patient Finder</profile:serviceName>
	<profile:textDescription xml:lang="en">This service returns the information of a patient whose name matches the given string.</profile:textDescription>

	<profile:hasInput rdf:resource="#PatientName"/>

	<profile:hasOutput rdf:resource="#PatientInfo"/>
</profile:Profile>

<!-- Process description -->

<process:AtomicProcess rdf:ID="PatientFinderProcess">
	<service:describes rdf:resource="#PatientFinderService"/>

	<process:hasInput rdf:resource="#PatientName"/>
	<process:hasOutput rdf:resource="#PatientInfo"/>
</process:AtomicProcess>

<process:Input rdf:ID="PatientName">
	<process:parameterType rdf:datatype="&xsd;#anyURI">&xsd;#string</process:parameterType>
	<rdfs:label>Patient Name</rdfs:label>
</process:Input>

<process:Output rdf:ID="PatientInfo">
	<process:parameterType rdf:datatype="&xsd;#anyURI">&bibtex;#Book</process:parameterType>
	<rdfs:label>Patient Info</rdfs:label>
</process:Output>

<!-- Grounding description -->
<grounding:DicomGrounding rdf:ID="PatientFinderGrounding">
	<service:supportedBy rdf:resource="#PatientFinderService"/>
	<grounding:hasAtomicProcessGrounding rdf:resource="#PatientFinderProcessGrounding"/>
</grounding:DicomGrounding>

<grounding:DicomAtomicProcessGrounding rdf:ID="BookFinderProcessGrounding">
	<grounding:owlsProcess rdf:resource="#PatientFinderProcess"/>
	<grounding:wsdlDocument rdf:datatype="&xsd;#anyURI">http://cheeso.members.winisp.net/books/books.asmx?WSDL</grounding:wsdlDocument>
	<grounding:dicomOperation>
		<grounding:DicomOperationRef>
			<grounding:dicomservice rdf:datatype="&xsd;#Literal">127.0.0.1</grounding:dicomservice>
			<grounding:dicomport rdf:datatype="&xsd;#integer">5678</grounding:dicomport>
		</grounding:DicomOperationRef>
	</grounding:dicomOperation>

	<grounding:wsdlInputMessage rdf:datatype="&xsd;#anyURI">http://cheeso.members.winisp.net/books/DoKeywordSearchSoapIn</grounding:wsdlInputMessage>
	<grounding:wsdlInput>
		<grounding:WsdlInputMessageMap>
			<grounding:owlsParameter rdf:resource="#BookName"/>
			<grounding:wsdlMessagePart rdf:datatype="&xsd;#anyURI">http://cheeso.members.winisp.net/books/keyword</grounding:wsdlMessagePart>
		</grounding:WsdlInputMessageMap>
	</grounding:wsdlInput>

	<grounding:wsdlOutputMessage rdf:datatype="&xsd;#anyURI">http://cheeso.members.winisp.net/books/DoKeywordSearchSoapOut</grounding:wsdlOutputMessage>
	<grounding:wsdlOutput>
		<grounding:WsdlOutputMessageMap>
			<grounding:owlsParameter rdf:resource="#BookInfo"/>
			<!-- As of OWL-S 1.2 wsdlMessagePart must not be used for XSLTOutputMessageMap; the
			     cardinality of the property is 0. The XSLT transformation is supposed to select
			     the desired WSDL message part(s). In this example this is achieved by
			     selecting "//ns1:DoKeywordSearchResult", cf. XSLT template match.
			  grounding:wsdlMessagePart rdf:datatype="&xsd;#anyURI">http://cheeso.members.winisp.net/books/DoKeywordSearchResult</grounding:wsdlMessagePart-->
			<grounding:xsltTransformationString>
			  <![CDATA[
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://dinoch.dyndns.org/webservices/books">
	<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>
	<xsl:template match="//ns1:DoKeywordSearchResult ">
		<xsl:variable name="pubdate" select="ns1:bookInfo/ns1:pubdate"/>
		<xsl:variable name="month_day" select="substring-before($pubdate,', ')"/>
		<xsl:variable name="year" select="substring-after($pubdate,', ')"/>
		<rdf:RDF
			xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
			xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
			xmlns:bibtex="http://purl.org/net/nknouf/ns/bibtex#">
			<bibtex:Book>
				<bibtex:hasISBN>
					<xsl:value-of select="ns1:bookInfo/ns1:isbn"/>
				</bibtex:hasISBN>
				<bibtex:hasTitle>
					<xsl:value-of select="ns1:bookInfo/ns1:title"/>
				</bibtex:hasTitle>
				<bibtex:hasAuthor>
					<xsl:value-of select="ns1:bookInfo/ns1:author"/>
				</bibtex:hasAuthor>
				<bibtex:hasPublisher>
					<xsl:value-of select="ns1:bookInfo/ns1:publisher"/>
				</bibtex:hasPublisher>
				<bibtex:hasMonth>
					<xsl:choose>
						<xsl:when test="contains($month_day,' ')">
							<xsl:value-of select="substring-after($month_day,' ')"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$month_day"/>
						</xsl:otherwise>
					</xsl:choose>
				</bibtex:hasMonth>
				<bibtex:hasYear rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">
					<xsl:value-of select="$year"/>
				</bibtex:hasYear>
			</bibtex:Book>
		</rdf:RDF>
	</xsl:template>
</xsl:stylesheet>
			  ]]>
			</grounding:xsltTransformationString>
		</grounding:WsdlOutputMessageMap>
	</grounding:wsdlOutput>
</grounding:DicomAtomicProcessGrounding>

</rdf:RDF>
